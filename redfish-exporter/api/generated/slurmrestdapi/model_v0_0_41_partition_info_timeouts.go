/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"encoding/json"
)

// checks if the V0041PartitionInfoTimeouts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041PartitionInfoTimeouts{}

// V0041PartitionInfoTimeouts struct for V0041PartitionInfoTimeouts
type V0041PartitionInfoTimeouts struct {
	Resume  *V0041Uint16NoValStruct `json:"resume,omitempty"`
	Suspend *V0041Uint16NoValStruct `json:"suspend,omitempty"`
}

// NewV0041PartitionInfoTimeouts instantiates a new V0041PartitionInfoTimeouts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041PartitionInfoTimeouts() *V0041PartitionInfoTimeouts {
	this := V0041PartitionInfoTimeouts{}
	return &this
}

// NewV0041PartitionInfoTimeoutsWithDefaults instantiates a new V0041PartitionInfoTimeouts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041PartitionInfoTimeoutsWithDefaults() *V0041PartitionInfoTimeouts {
	this := V0041PartitionInfoTimeouts{}
	return &this
}

// GetResume returns the Resume field value if set, zero value otherwise.
func (o *V0041PartitionInfoTimeouts) GetResume() V0041Uint16NoValStruct {
	if o == nil || IsNil(o.Resume) {
		var ret V0041Uint16NoValStruct
		return ret
	}
	return *o.Resume
}

// GetResumeOk returns a tuple with the Resume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041PartitionInfoTimeouts) GetResumeOk() (*V0041Uint16NoValStruct, bool) {
	if o == nil || IsNil(o.Resume) {
		return nil, false
	}
	return o.Resume, true
}

// HasResume returns a boolean if a field has been set.
func (o *V0041PartitionInfoTimeouts) HasResume() bool {
	if o != nil && !IsNil(o.Resume) {
		return true
	}

	return false
}

// SetResume gets a reference to the given V0041Uint16NoValStruct and assigns it to the Resume field.
func (o *V0041PartitionInfoTimeouts) SetResume(v V0041Uint16NoValStruct) {
	o.Resume = &v
}

// GetSuspend returns the Suspend field value if set, zero value otherwise.
func (o *V0041PartitionInfoTimeouts) GetSuspend() V0041Uint16NoValStruct {
	if o == nil || IsNil(o.Suspend) {
		var ret V0041Uint16NoValStruct
		return ret
	}
	return *o.Suspend
}

// GetSuspendOk returns a tuple with the Suspend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041PartitionInfoTimeouts) GetSuspendOk() (*V0041Uint16NoValStruct, bool) {
	if o == nil || IsNil(o.Suspend) {
		return nil, false
	}
	return o.Suspend, true
}

// HasSuspend returns a boolean if a field has been set.
func (o *V0041PartitionInfoTimeouts) HasSuspend() bool {
	if o != nil && !IsNil(o.Suspend) {
		return true
	}

	return false
}

// SetSuspend gets a reference to the given V0041Uint16NoValStruct and assigns it to the Suspend field.
func (o *V0041PartitionInfoTimeouts) SetSuspend(v V0041Uint16NoValStruct) {
	o.Suspend = &v
}

func (o V0041PartitionInfoTimeouts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041PartitionInfoTimeouts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resume) {
		toSerialize["resume"] = o.Resume
	}
	if !IsNil(o.Suspend) {
		toSerialize["suspend"] = o.Suspend
	}
	return toSerialize, nil
}

type NullableV0041PartitionInfoTimeouts struct {
	value *V0041PartitionInfoTimeouts
	isSet bool
}

func (v NullableV0041PartitionInfoTimeouts) Get() *V0041PartitionInfoTimeouts {
	return v.value
}

func (v *NullableV0041PartitionInfoTimeouts) Set(val *V0041PartitionInfoTimeouts) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041PartitionInfoTimeouts) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041PartitionInfoTimeouts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041PartitionInfoTimeouts(val *V0041PartitionInfoTimeouts) *NullableV0041PartitionInfoTimeouts {
	return &NullableV0041PartitionInfoTimeouts{value: val, isSet: true}
}

func (v NullableV0041PartitionInfoTimeouts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041PartitionInfoTimeouts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the V0041OpenapiLicensesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiLicensesResp{}

// V0041OpenapiLicensesResp struct for V0041OpenapiLicensesResp
type V0041OpenapiLicensesResp struct {
	Licenses   []V0041LicensesInner        `json:"licenses"`
	LastUpdate V0041Uint64NoValStruct      `json:"last_update"`
	Meta       *V0041OpenapiMeta           `json:"meta,omitempty"`
	Errors     []V0041OpenapiErrorsInner   `json:"errors,omitempty"`
	Warnings   []V0041OpenapiWarningsInner `json:"warnings,omitempty"`
}

type _V0041OpenapiLicensesResp V0041OpenapiLicensesResp

// NewV0041OpenapiLicensesResp instantiates a new V0041OpenapiLicensesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiLicensesResp(licenses []V0041LicensesInner, lastUpdate V0041Uint64NoValStruct) *V0041OpenapiLicensesResp {
	this := V0041OpenapiLicensesResp{}
	this.Licenses = licenses
	this.LastUpdate = lastUpdate
	return &this
}

// NewV0041OpenapiLicensesRespWithDefaults instantiates a new V0041OpenapiLicensesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiLicensesRespWithDefaults() *V0041OpenapiLicensesResp {
	this := V0041OpenapiLicensesResp{}
	return &this
}

// GetLicenses returns the Licenses field value
func (o *V0041OpenapiLicensesResp) GetLicenses() []V0041LicensesInner {
	if o == nil {
		var ret []V0041LicensesInner
		return ret
	}

	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value
// and a boolean to check if the value has been set.
func (o *V0041OpenapiLicensesResp) GetLicensesOk() ([]V0041LicensesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Licenses, true
}

// SetLicenses sets field value
func (o *V0041OpenapiLicensesResp) SetLicenses(v []V0041LicensesInner) {
	o.Licenses = v
}

// GetLastUpdate returns the LastUpdate field value
func (o *V0041OpenapiLicensesResp) GetLastUpdate() V0041Uint64NoValStruct {
	if o == nil {
		var ret V0041Uint64NoValStruct
		return ret
	}

	return o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value
// and a boolean to check if the value has been set.
func (o *V0041OpenapiLicensesResp) GetLastUpdateOk() (*V0041Uint64NoValStruct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdate, true
}

// SetLastUpdate sets field value
func (o *V0041OpenapiLicensesResp) SetLastUpdate(v V0041Uint64NoValStruct) {
	o.LastUpdate = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *V0041OpenapiLicensesResp) GetMeta() V0041OpenapiMeta {
	if o == nil || IsNil(o.Meta) {
		var ret V0041OpenapiMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiLicensesResp) GetMetaOk() (*V0041OpenapiMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *V0041OpenapiLicensesResp) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V0041OpenapiMeta and assigns it to the Meta field.
func (o *V0041OpenapiLicensesResp) SetMeta(v V0041OpenapiMeta) {
	o.Meta = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V0041OpenapiLicensesResp) GetErrors() []V0041OpenapiErrorsInner {
	if o == nil || IsNil(o.Errors) {
		var ret []V0041OpenapiErrorsInner
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiLicensesResp) GetErrorsOk() ([]V0041OpenapiErrorsInner, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V0041OpenapiLicensesResp) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V0041OpenapiErrorsInner and assigns it to the Errors field.
func (o *V0041OpenapiLicensesResp) SetErrors(v []V0041OpenapiErrorsInner) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *V0041OpenapiLicensesResp) GetWarnings() []V0041OpenapiWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []V0041OpenapiWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiLicensesResp) GetWarningsOk() ([]V0041OpenapiWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *V0041OpenapiLicensesResp) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []V0041OpenapiWarningsInner and assigns it to the Warnings field.
func (o *V0041OpenapiLicensesResp) SetWarnings(v []V0041OpenapiWarningsInner) {
	o.Warnings = v
}

func (o V0041OpenapiLicensesResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiLicensesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["licenses"] = o.Licenses
	toSerialize["last_update"] = o.LastUpdate
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *V0041OpenapiLicensesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"licenses",
		"last_update",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0041OpenapiLicensesResp := _V0041OpenapiLicensesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0041OpenapiLicensesResp)

	if err != nil {
		return err
	}

	*o = V0041OpenapiLicensesResp(varV0041OpenapiLicensesResp)

	return err
}

type NullableV0041OpenapiLicensesResp struct {
	value *V0041OpenapiLicensesResp
	isSet bool
}

func (v NullableV0041OpenapiLicensesResp) Get() *V0041OpenapiLicensesResp {
	return v.value
}

func (v *NullableV0041OpenapiLicensesResp) Set(val *V0041OpenapiLicensesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiLicensesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiLicensesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiLicensesResp(val *V0041OpenapiLicensesResp) *NullableV0041OpenapiLicensesResp {
	return &NullableV0041OpenapiLicensesResp{value: val, isSet: true}
}

func (v NullableV0041OpenapiLicensesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiLicensesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"encoding/json"
)

// checks if the V0041JobResNodesInnerMemory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041JobResNodesInnerMemory{}

// V0041JobResNodesInnerMemory struct for V0041JobResNodesInnerMemory
type V0041JobResNodesInnerMemory struct {
	// Total memory (MiB) used by job
	Used *int64 `json:"used,omitempty"`
	// Total memory (MiB) allocated to job
	Allocated *int64 `json:"allocated,omitempty"`
}

// NewV0041JobResNodesInnerMemory instantiates a new V0041JobResNodesInnerMemory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041JobResNodesInnerMemory() *V0041JobResNodesInnerMemory {
	this := V0041JobResNodesInnerMemory{}
	return &this
}

// NewV0041JobResNodesInnerMemoryWithDefaults instantiates a new V0041JobResNodesInnerMemory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041JobResNodesInnerMemoryWithDefaults() *V0041JobResNodesInnerMemory {
	this := V0041JobResNodesInnerMemory{}
	return &this
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *V0041JobResNodesInnerMemory) GetUsed() int64 {
	if o == nil || IsNil(o.Used) {
		var ret int64
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodesInnerMemory) GetUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *V0041JobResNodesInnerMemory) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int64 and assigns it to the Used field.
func (o *V0041JobResNodesInnerMemory) SetUsed(v int64) {
	o.Used = &v
}

// GetAllocated returns the Allocated field value if set, zero value otherwise.
func (o *V0041JobResNodesInnerMemory) GetAllocated() int64 {
	if o == nil || IsNil(o.Allocated) {
		var ret int64
		return ret
	}
	return *o.Allocated
}

// GetAllocatedOk returns a tuple with the Allocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodesInnerMemory) GetAllocatedOk() (*int64, bool) {
	if o == nil || IsNil(o.Allocated) {
		return nil, false
	}
	return o.Allocated, true
}

// HasAllocated returns a boolean if a field has been set.
func (o *V0041JobResNodesInnerMemory) HasAllocated() bool {
	if o != nil && !IsNil(o.Allocated) {
		return true
	}

	return false
}

// SetAllocated gets a reference to the given int64 and assigns it to the Allocated field.
func (o *V0041JobResNodesInnerMemory) SetAllocated(v int64) {
	o.Allocated = &v
}

func (o V0041JobResNodesInnerMemory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041JobResNodesInnerMemory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.Allocated) {
		toSerialize["allocated"] = o.Allocated
	}
	return toSerialize, nil
}

type NullableV0041JobResNodesInnerMemory struct {
	value *V0041JobResNodesInnerMemory
	isSet bool
}

func (v NullableV0041JobResNodesInnerMemory) Get() *V0041JobResNodesInnerMemory {
	return v.value
}

func (v *NullableV0041JobResNodesInnerMemory) Set(val *V0041JobResNodesInnerMemory) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041JobResNodesInnerMemory) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041JobResNodesInnerMemory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041JobResNodesInnerMemory(val *V0041JobResNodesInnerMemory) *NullableV0041JobResNodesInnerMemory {
	return &NullableV0041JobResNodesInnerMemory{value: val, isSet: true}
}

func (v NullableV0041JobResNodesInnerMemory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041JobResNodesInnerMemory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"encoding/json"
)

// checks if the V0041OpenapiMetaSlurmVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiMetaSlurmVersion{}

// V0041OpenapiMetaSlurmVersion struct for V0041OpenapiMetaSlurmVersion
type V0041OpenapiMetaSlurmVersion struct {
	// Slurm release major version
	Major *string `json:"major,omitempty"`
	// Slurm release micro version
	Micro *string `json:"micro,omitempty"`
	// Slurm release minor version
	Minor *string `json:"minor,omitempty"`
}

// NewV0041OpenapiMetaSlurmVersion instantiates a new V0041OpenapiMetaSlurmVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiMetaSlurmVersion() *V0041OpenapiMetaSlurmVersion {
	this := V0041OpenapiMetaSlurmVersion{}
	return &this
}

// NewV0041OpenapiMetaSlurmVersionWithDefaults instantiates a new V0041OpenapiMetaSlurmVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiMetaSlurmVersionWithDefaults() *V0041OpenapiMetaSlurmVersion {
	this := V0041OpenapiMetaSlurmVersion{}
	return &this
}

// GetMajor returns the Major field value if set, zero value otherwise.
func (o *V0041OpenapiMetaSlurmVersion) GetMajor() string {
	if o == nil || IsNil(o.Major) {
		var ret string
		return ret
	}
	return *o.Major
}

// GetMajorOk returns a tuple with the Major field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiMetaSlurmVersion) GetMajorOk() (*string, bool) {
	if o == nil || IsNil(o.Major) {
		return nil, false
	}
	return o.Major, true
}

// HasMajor returns a boolean if a field has been set.
func (o *V0041OpenapiMetaSlurmVersion) HasMajor() bool {
	if o != nil && !IsNil(o.Major) {
		return true
	}

	return false
}

// SetMajor gets a reference to the given string and assigns it to the Major field.
func (o *V0041OpenapiMetaSlurmVersion) SetMajor(v string) {
	o.Major = &v
}

// GetMicro returns the Micro field value if set, zero value otherwise.
func (o *V0041OpenapiMetaSlurmVersion) GetMicro() string {
	if o == nil || IsNil(o.Micro) {
		var ret string
		return ret
	}
	return *o.Micro
}

// GetMicroOk returns a tuple with the Micro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiMetaSlurmVersion) GetMicroOk() (*string, bool) {
	if o == nil || IsNil(o.Micro) {
		return nil, false
	}
	return o.Micro, true
}

// HasMicro returns a boolean if a field has been set.
func (o *V0041OpenapiMetaSlurmVersion) HasMicro() bool {
	if o != nil && !IsNil(o.Micro) {
		return true
	}

	return false
}

// SetMicro gets a reference to the given string and assigns it to the Micro field.
func (o *V0041OpenapiMetaSlurmVersion) SetMicro(v string) {
	o.Micro = &v
}

// GetMinor returns the Minor field value if set, zero value otherwise.
func (o *V0041OpenapiMetaSlurmVersion) GetMinor() string {
	if o == nil || IsNil(o.Minor) {
		var ret string
		return ret
	}
	return *o.Minor
}

// GetMinorOk returns a tuple with the Minor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiMetaSlurmVersion) GetMinorOk() (*string, bool) {
	if o == nil || IsNil(o.Minor) {
		return nil, false
	}
	return o.Minor, true
}

// HasMinor returns a boolean if a field has been set.
func (o *V0041OpenapiMetaSlurmVersion) HasMinor() bool {
	if o != nil && !IsNil(o.Minor) {
		return true
	}

	return false
}

// SetMinor gets a reference to the given string and assigns it to the Minor field.
func (o *V0041OpenapiMetaSlurmVersion) SetMinor(v string) {
	o.Minor = &v
}

func (o V0041OpenapiMetaSlurmVersion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiMetaSlurmVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Major) {
		toSerialize["major"] = o.Major
	}
	if !IsNil(o.Micro) {
		toSerialize["micro"] = o.Micro
	}
	if !IsNil(o.Minor) {
		toSerialize["minor"] = o.Minor
	}
	return toSerialize, nil
}

type NullableV0041OpenapiMetaSlurmVersion struct {
	value *V0041OpenapiMetaSlurmVersion
	isSet bool
}

func (v NullableV0041OpenapiMetaSlurmVersion) Get() *V0041OpenapiMetaSlurmVersion {
	return v.value
}

func (v *NullableV0041OpenapiMetaSlurmVersion) Set(val *V0041OpenapiMetaSlurmVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiMetaSlurmVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiMetaSlurmVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiMetaSlurmVersion(val *V0041OpenapiMetaSlurmVersion) *NullableV0041OpenapiMetaSlurmVersion {
	return &NullableV0041OpenapiMetaSlurmVersion{value: val, isSet: true}
}

func (v NullableV0041OpenapiMetaSlurmVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiMetaSlurmVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"encoding/json"
)

// checks if the V0041JobResNodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041JobResNodes{}

// V0041JobResNodes struct for V0041JobResNodes
type V0041JobResNodes struct {
	// Number of nodes assigned to job
	Count *int32 `json:"count,omitempty"`
	// Node scheduling selection request
	SelectType []string `json:"select_type,omitempty"`
	// host list for job
	List *string `json:"list,omitempty"`
	// Job allocated full nodes
	Whole *bool `json:"whole,omitempty"`
	// Job resources for a node
	Allocation []V0041JobResNodesInner `json:"allocation,omitempty"`
}

// NewV0041JobResNodes instantiates a new V0041JobResNodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041JobResNodes() *V0041JobResNodes {
	this := V0041JobResNodes{}
	return &this
}

// NewV0041JobResNodesWithDefaults instantiates a new V0041JobResNodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041JobResNodesWithDefaults() *V0041JobResNodes {
	this := V0041JobResNodes{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *V0041JobResNodes) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodes) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *V0041JobResNodes) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *V0041JobResNodes) SetCount(v int32) {
	o.Count = &v
}

// GetSelectType returns the SelectType field value if set, zero value otherwise.
func (o *V0041JobResNodes) GetSelectType() []string {
	if o == nil || IsNil(o.SelectType) {
		var ret []string
		return ret
	}
	return o.SelectType
}

// GetSelectTypeOk returns a tuple with the SelectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodes) GetSelectTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.SelectType) {
		return nil, false
	}
	return o.SelectType, true
}

// HasSelectType returns a boolean if a field has been set.
func (o *V0041JobResNodes) HasSelectType() bool {
	if o != nil && !IsNil(o.SelectType) {
		return true
	}

	return false
}

// SetSelectType gets a reference to the given []string and assigns it to the SelectType field.
func (o *V0041JobResNodes) SetSelectType(v []string) {
	o.SelectType = v
}

// GetList returns the List field value if set, zero value otherwise.
func (o *V0041JobResNodes) GetList() string {
	if o == nil || IsNil(o.List) {
		var ret string
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodes) GetListOk() (*string, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *V0041JobResNodes) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given string and assigns it to the List field.
func (o *V0041JobResNodes) SetList(v string) {
	o.List = &v
}

// GetWhole returns the Whole field value if set, zero value otherwise.
func (o *V0041JobResNodes) GetWhole() bool {
	if o == nil || IsNil(o.Whole) {
		var ret bool
		return ret
	}
	return *o.Whole
}

// GetWholeOk returns a tuple with the Whole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodes) GetWholeOk() (*bool, bool) {
	if o == nil || IsNil(o.Whole) {
		return nil, false
	}
	return o.Whole, true
}

// HasWhole returns a boolean if a field has been set.
func (o *V0041JobResNodes) HasWhole() bool {
	if o != nil && !IsNil(o.Whole) {
		return true
	}

	return false
}

// SetWhole gets a reference to the given bool and assigns it to the Whole field.
func (o *V0041JobResNodes) SetWhole(v bool) {
	o.Whole = &v
}

// GetAllocation returns the Allocation field value if set, zero value otherwise.
func (o *V0041JobResNodes) GetAllocation() []V0041JobResNodesInner {
	if o == nil || IsNil(o.Allocation) {
		var ret []V0041JobResNodesInner
		return ret
	}
	return o.Allocation
}

// GetAllocationOk returns a tuple with the Allocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041JobResNodes) GetAllocationOk() ([]V0041JobResNodesInner, bool) {
	if o == nil || IsNil(o.Allocation) {
		return nil, false
	}
	return o.Allocation, true
}

// HasAllocation returns a boolean if a field has been set.
func (o *V0041JobResNodes) HasAllocation() bool {
	if o != nil && !IsNil(o.Allocation) {
		return true
	}

	return false
}

// SetAllocation gets a reference to the given []V0041JobResNodesInner and assigns it to the Allocation field.
func (o *V0041JobResNodes) SetAllocation(v []V0041JobResNodesInner) {
	o.Allocation = v
}

func (o V0041JobResNodes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041JobResNodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.SelectType) {
		toSerialize["select_type"] = o.SelectType
	}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.Whole) {
		toSerialize["whole"] = o.Whole
	}
	if !IsNil(o.Allocation) {
		toSerialize["allocation"] = o.Allocation
	}
	return toSerialize, nil
}

type NullableV0041JobResNodes struct {
	value *V0041JobResNodes
	isSet bool
}

func (v NullableV0041JobResNodes) Get() *V0041JobResNodes {
	return v.value
}

func (v *NullableV0041JobResNodes) Set(val *V0041JobResNodes) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041JobResNodes) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041JobResNodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041JobResNodes(val *V0041JobResNodes) *NullableV0041JobResNodes {
	return &NullableV0041JobResNodes{value: val, isSet: true}
}

func (v NullableV0041JobResNodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041JobResNodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

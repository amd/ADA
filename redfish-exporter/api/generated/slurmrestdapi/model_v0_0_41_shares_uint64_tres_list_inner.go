/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.08.0-0rc1&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestdapi

import (
	"encoding/json"
)

// checks if the V0041SharesUint64TresListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041SharesUint64TresListInner{}

// V0041SharesUint64TresListInner struct for V0041SharesUint64TresListInner
type V0041SharesUint64TresListInner struct {
	// TRES name
	Name  *string                 `json:"name,omitempty"`
	Value *V0041Uint64NoValStruct `json:"value,omitempty"`
}

// NewV0041SharesUint64TresListInner instantiates a new V0041SharesUint64TresListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041SharesUint64TresListInner() *V0041SharesUint64TresListInner {
	this := V0041SharesUint64TresListInner{}
	return &this
}

// NewV0041SharesUint64TresListInnerWithDefaults instantiates a new V0041SharesUint64TresListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041SharesUint64TresListInnerWithDefaults() *V0041SharesUint64TresListInner {
	this := V0041SharesUint64TresListInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0041SharesUint64TresListInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041SharesUint64TresListInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0041SharesUint64TresListInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0041SharesUint64TresListInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *V0041SharesUint64TresListInner) GetValue() V0041Uint64NoValStruct {
	if o == nil || IsNil(o.Value) {
		var ret V0041Uint64NoValStruct
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041SharesUint64TresListInner) GetValueOk() (*V0041Uint64NoValStruct, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *V0041SharesUint64TresListInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given V0041Uint64NoValStruct and assigns it to the Value field.
func (o *V0041SharesUint64TresListInner) SetValue(v V0041Uint64NoValStruct) {
	o.Value = &v
}

func (o V0041SharesUint64TresListInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041SharesUint64TresListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableV0041SharesUint64TresListInner struct {
	value *V0041SharesUint64TresListInner
	isSet bool
}

func (v NullableV0041SharesUint64TresListInner) Get() *V0041SharesUint64TresListInner {
	return v.value
}

func (v *NullableV0041SharesUint64TresListInner) Set(val *V0041SharesUint64TresListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041SharesUint64TresListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041SharesUint64TresListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041SharesUint64TresListInner(val *V0041SharesUint64TresListInner) *NullableV0041SharesUint64TresListInner {
	return &NullableV0041SharesUint64TresListInner{value: val, isSet: true}
}

func (v NullableV0041SharesUint64TresListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041SharesUint64TresListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

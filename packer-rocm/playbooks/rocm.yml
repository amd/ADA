---
# Copyright (c) 2024 Advanced Micro Devices, Inc. All rights reserved.
# yamllint disable rule:line-length
- name: "Prepare amdgpu-dkms + ROCm"
  hosts: default
  become: true
  environment:  # may be superfluous for your environment; mapped through Packer HCL with 'ansible_env_vars'
    http_proxy: "{{ lookup('ansible.builtin.env', 'http_proxy') | default(omit) }}"
    https_proxy: "{{ lookup('ansible.builtin.env', 'https_proxy') | default(omit) }}"
    no_proxy: "{{ lookup('ansible.builtin.env', 'no_proxy') | default(omit) }}"
  vars:
    rocm_requests: "{{ (rocm_releases | split(',')) | default(['6.2.2']) }}"
    rocm_gpg_url: 'https://repo.radeon.com/rocm/rocm.gpg.key'
    rocm_reqs:
      common:
        - dkms
      Debian:
        - "linux-headers-{{ ansible_kernel }}"
        - "linux-modules-extra-{{ ansible_kernel }}"
      RedHat:
        - "kernel-headers"
        - "kernel-devel-matched"
        - "kernel-modules-extra"
    rocm_fedora_el: '9.4'  # NOTE: placeholder, for testing: assume equivalence between this RHEL release and 'current Fedora'
  tasks:

    - name: Sort ROCm version requests
      ansible.builtin.set_fact:
        rocm_release_peak: "{{ (rocm_requests | community.general.version_sort) | last }}"

    - name: Install Requirements
      ansible.builtin.package:
        name: "{{ rocm_reqs['common'] + rocm_reqs[ansible_os_family] }}"
        state: present
        update_cache: true  # passed to the modules for either 'apt' or 'dnf'; supported by either

    - name: RedHat
      when: ansible_os_family in ['RedHat']
      block:
        - name: "Manage 'amdgpu' Yum repositories"
          ansible.builtin.yum_repository:
            baseurl: "https://repo.radeon.com/amdgpu/{{ rocm_release_peak }}/el/{{ rocm_fedora_el if ansible_distribution in ['Fedora'] else ansible_distribution_version }}/main/{{ rpmrepo.subdir }}/"
            description: "AMDGPU {{ rocm_release_peak }} repository"
            enabled: "{{ rpmrepo.enabled | default(true) }}"
            file: amdgpu
            gpgkey: "{{ rocm_gpg_url }}"
            name: "{{ rpmrepo.name }}"
          loop:
            - { name: amdgpu, subdir: "{{ ansible_architecture }}" }
            - { name: amdgpu-src, subdir: "source", enabled: false }
          loop_control: { loop_var: rpmrepo }

        - name: "Manage versioned ROCm Yum repositories"
          ansible.builtin.yum_repository:
            baseurl: "https://repo.radeon.com/rocm/el{{ (rocm_fedora_el | split('.') | first) if ansible_distribution in ['Fedora'] else ansible_distribution_major_version }}/{{ rocm_release }}/main"
            description: "ROCm {{ rocm_release }} repository"
            gpgkey: "{{ rocm_gpg_url }}"
            name: rocm
          loop: "{{ rocm_requests }}"
          loop_control: { loop_var: rocm_release }

        - name: "Ensure CodeReady Builder+EPEL for RHEL/derivatives [that aren't Fedora]"
          when: ansible_distribution not in ['Fedora']
          block:
            - name: Manage CRB
              community.general.dnf_config_manager:
                name: crb
                state: enabled

            - name: Ensure EPEL
              ansible.builtin.package:
                name: "{{ epel[ansible_distribution] | default('epel-release') }}"  # CentOS/etc provide 'epel-release'; RedHat and others may require download
                state: present
              vars:
                epel:
                  RedHat: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"

    - name: Debian
      when: ansible_os_family in ['Debian']
      block:

        - name: Fetch signing key for Apt
          ansible.builtin.apt_key:
            url: "{{ rocm_gpg_url }}"
            keyring: /etc/apt/trusted.gpg.d/rocm.gpg

        - name: Manage 'amdgpu' APT repository
          ansible.builtin.apt_repository:
            repo: >
              deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/rocm.gpg]
              https://repo.radeon.com/amdgpu/{{ rocm_release_peak }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main
            state: present
            filename: amdgpu

        - name: "Manage versioned ROCm Apt repositories"
          ansible.builtin.apt_repository:
            repo: >
              deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/rocm.gpg]
              https://repo.radeon.com/rocm/apt/{{ rocm_release }} {{ ansible_distribution_release }} main
            state: present
            filename: rocm
          loop: "{{ rocm_requests }}"
          loop_control: { loop_var: rocm_release }

    - name: Install amdgpu-dkms
      ansible.builtin.package:
        name: amdgpu-dkms
        state: present

    - name: Install ROCm releases
      ansible.builtin.package:
        name: "rocm{{ _rel }}"
        state: present
      loop: "{{ rocm_requests | community.general.version_sort }}"
      loop_control: { loop_var: _rel }

    - name: Install remaining packages
      ansible.builtin.package:
        name: "{{ (rocm_extras | split(',')) if rocm_extras is defined else [] }}"  # comprehension required; can't '|default' out of undefined split
        state: present
        update_cache: true

# vim: ft=yaml.ansible

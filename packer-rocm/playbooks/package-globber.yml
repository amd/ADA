---
# vim: ft=yaml.ansible
- name: Package Globber  # the Packer 'file' provisioner copies the files to the builder VM; this processes/installs
  hosts: default
  become: true
  environment:  # may be superfluous for your environment; mapped through Packer HCL with 'ansible_env_vars'
    http_proxy: "{{ lookup('ansible.builtin.env', 'http_proxy') | default(omit) }}"
    https_proxy: "{{ lookup('ansible.builtin.env', 'https_proxy') | default(omit) }}"
    no_proxy: "{{ lookup('ansible.builtin.env', 'no_proxy') | default(omit) }}"
  vars:
    packages: '/tmp/packages'
    pkg_exts:  # mapped by 'ansible_os_family' to glob [relevant] file patterns
      Debian: '.deb'
      RedHat: '.rpm'
  tasks:

    # 'fileglob' works on the controller; must 'find' when potentially mixing local/remote client usecases
    - name: Find Packages
      ansible.builtin.find:
        paths: "{{ packages }}"
        patterns:
          - "*{{ pkg_exts[ansible_os_family] }}"
        recurse: true
      register: pkg_search

    - name: Set 'found_pkgs' fact
      ansible.builtin.set_fact:
        found_pkgs: "{{ pkg_search.files | map(attribute='path') }}"

    - name: Loop/Install 'found_pkgs'
      ansible.builtin.package:  # RE: unusual templating - file paths don't work as well for 'name' on Debian/derivatives, requiring 'deb'
        deb: "{{ item if ansible_os_family in ['Debian'] else omit }}"
        name: "{{ item if ansible_os_family in ['RedHat'] else omit }}"
        state: present
      loop: "{{ found_pkgs }}"
